---
openapi: 3.0.1
info:
  title: Blog API V1
  version: v1
paths:
  "/api/v1/posts":
    get:
      summary: list posts
      tags:
      - Post
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
    post:
      summary: create post
      tags:
      - Post
      parameters: []
      security:
      - bearerAuth: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                user:
                  type: object
              required:
              - title
  "/api/v1/posts/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show post
      tags:
      - Post
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '401':
          description: unauthorized
    patch:
      summary: update post
      tags:
      - Post
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
    put:
      summary: update post
      tags:
      - Post
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
    delete:
      summary: delete post
      tags:
      - Post
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
  "/api/v1/login":
    post:
      summary: Login
      tags:
      - Session
      parameters: []
      responses:
        '200':
          description: sign in
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
            examples:
              login_request_body_example:
                summary: A Login Request body with default user and password
                value:
                  user:
                    email: demo@blog.com.br
                    password: Teste@1234
  "/api/v1/logout":
    delete:
      summary: Logout
      tags:
      - Session
      responses:
        '204':
          description: No Content
        '403':
          description: Unprocessable Entity
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
